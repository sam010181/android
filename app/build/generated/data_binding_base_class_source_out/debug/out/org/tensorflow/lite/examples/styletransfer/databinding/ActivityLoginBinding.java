// Generated by view binder compiler. Do not edit!
package org.tensorflow.lite.examples.styletransfer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.tensorflow.lite.examples.styletransfer.R;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout LinearLayout1;

  @NonNull
  public final EditText email;

  @NonNull
  public final EditText password;

  @NonNull
  public final TextView text1;

  @NonNull
  public final TextView text2;

  @NonNull
  public final TextView text3;

  private ActivityLoginBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout LinearLayout1,
      @NonNull EditText email, @NonNull EditText password, @NonNull TextView text1,
      @NonNull TextView text2, @NonNull TextView text3) {
    this.rootView = rootView;
    this.LinearLayout1 = LinearLayout1;
    this.email = email;
    this.password = password;
    this.text1 = text1;
    this.text2 = text2;
    this.text3 = text3;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout LinearLayout1 = (LinearLayout) rootView;

      id = R.id.email;
      EditText email = rootView.findViewById(id);
      if (email == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = rootView.findViewById(id);
      if (password == null) {
        break missingId;
      }

      id = R.id.text1;
      TextView text1 = rootView.findViewById(id);
      if (text1 == null) {
        break missingId;
      }

      id = R.id.text2;
      TextView text2 = rootView.findViewById(id);
      if (text2 == null) {
        break missingId;
      }

      id = R.id.text3;
      TextView text3 = rootView.findViewById(id);
      if (text3 == null) {
        break missingId;
      }

      return new ActivityLoginBinding((LinearLayout) rootView, LinearLayout1, email, password,
          text1, text2, text3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
