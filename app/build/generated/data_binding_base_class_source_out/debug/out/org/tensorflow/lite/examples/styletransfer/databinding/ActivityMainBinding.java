// Generated by view binder compiler. Do not edit!
package org.tensorflow.lite.examples.styletransfer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.tensorflow.lite.examples.styletransfer.R;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button button1;

  @NonNull
  public final FloatingActionButton captureButton;

  @NonNull
  public final TextView chooseStyleTextView;

  @NonNull
  public final View dummy;

  @NonNull
  public final HorizontalScrollView horizontalScrollView;

  @NonNull
  public final ImageView originalImageview;

  @NonNull
  public final ProgressBar progressCircular;

  @NonNull
  public final ImageView resultImageview;

  @NonNull
  public final ImageView styleImageview;

  @NonNull
  public final FloatingActionButton toggleButton;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final FrameLayout viewFinder;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView, @NonNull Button button1,
      @NonNull FloatingActionButton captureButton, @NonNull TextView chooseStyleTextView,
      @NonNull View dummy, @NonNull HorizontalScrollView horizontalScrollView,
      @NonNull ImageView originalImageview, @NonNull ProgressBar progressCircular,
      @NonNull ImageView resultImageview, @NonNull ImageView styleImageview,
      @NonNull FloatingActionButton toggleButton, @NonNull Toolbar toolbar,
      @NonNull FrameLayout viewFinder) {
    this.rootView = rootView;
    this.button1 = button1;
    this.captureButton = captureButton;
    this.chooseStyleTextView = chooseStyleTextView;
    this.dummy = dummy;
    this.horizontalScrollView = horizontalScrollView;
    this.originalImageview = originalImageview;
    this.progressCircular = progressCircular;
    this.resultImageview = resultImageview;
    this.styleImageview = styleImageview;
    this.toggleButton = toggleButton;
    this.toolbar = toolbar;
    this.viewFinder = viewFinder;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button1;
      Button button1 = rootView.findViewById(id);
      if (button1 == null) {
        break missingId;
      }

      id = R.id.capture_button;
      FloatingActionButton captureButton = rootView.findViewById(id);
      if (captureButton == null) {
        break missingId;
      }

      id = R.id.choose_style_text_view;
      TextView chooseStyleTextView = rootView.findViewById(id);
      if (chooseStyleTextView == null) {
        break missingId;
      }

      id = R.id.dummy;
      View dummy = rootView.findViewById(id);
      if (dummy == null) {
        break missingId;
      }

      id = R.id.horizontal_scroll_view;
      HorizontalScrollView horizontalScrollView = rootView.findViewById(id);
      if (horizontalScrollView == null) {
        break missingId;
      }

      id = R.id.original_imageview;
      ImageView originalImageview = rootView.findViewById(id);
      if (originalImageview == null) {
        break missingId;
      }

      id = R.id.progress_circular;
      ProgressBar progressCircular = rootView.findViewById(id);
      if (progressCircular == null) {
        break missingId;
      }

      id = R.id.result_imageview;
      ImageView resultImageview = rootView.findViewById(id);
      if (resultImageview == null) {
        break missingId;
      }

      id = R.id.style_imageview;
      ImageView styleImageview = rootView.findViewById(id);
      if (styleImageview == null) {
        break missingId;
      }

      id = R.id.toggle_button;
      FloatingActionButton toggleButton = rootView.findViewById(id);
      if (toggleButton == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.view_finder;
      FrameLayout viewFinder = rootView.findViewById(id);
      if (viewFinder == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, button1, captureButton,
          chooseStyleTextView, dummy, horizontalScrollView, originalImageview, progressCircular,
          resultImageview, styleImageview, toggleButton, toolbar, viewFinder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
